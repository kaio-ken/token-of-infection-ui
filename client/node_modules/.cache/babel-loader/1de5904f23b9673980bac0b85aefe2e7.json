{"ast":null,"code":"var _jsxFileName = \"/Users/richie/Developer/zombie/src/components/TugOfWar.js\";\nimport React, { Component } from \"react\";\nimport \"./TugOfWar.scss\";\n\nclass TugOfWar extends Component {\n  calculateBoxesFromCounts(zombieCount, humanCount) {\n    const total = zombieCount + humanCount;\n    const percentZombies = Math.round(zombieCount / total * 100);\n    const percentHumans = Math.round(humanCount / total * 100);\n    return {\n      percentZombies,\n      percentHumans\n    };\n  }\n\n  render() {\n    const _this$calculateBoxesF = this.calculateBoxesFromCounts(this.props.zombies, this.props.humans),\n          percentZombies = _this$calculateBoxesF.percentZombies,\n          percentHumans = _this$calculateBoxesF.percentHumans;\n\n    let zombieDivs = [];\n\n    for (let i = 0; i < percentZombies; i++) {\n      zombieDivs.push(React.createElement(\"div\", {\n        key: i,\n        className: \"pink-pixel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n\n    let humanDivs = [];\n\n    for (let i = 0; i < percentHumans; i++) {\n      humanDivs.push(React.createElement(\"div\", {\n        key: i,\n        className: \"yellow-pixel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContents: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, humanDivs.map(div => div), zombieDivs.map(div => div)));\n  }\n\n}\n\nexport default TugOfWar;","map":{"version":3,"sources":["/Users/richie/Developer/zombie/src/components/TugOfWar.js"],"names":["React","Component","TugOfWar","calculateBoxesFromCounts","zombieCount","humanCount","total","percentZombies","Math","round","percentHumans","render","props","zombies","humans","zombieDivs","i","push","humanDivs","display","justifyContents","map","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,wBAAwB,CAACC,WAAD,EAAcC,UAAd,EAA0B;AAChD,UAAMC,KAAK,GAAGF,WAAW,GAAGC,UAA5B;AACA,UAAME,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAYL,WAAW,GAAGE,KAAf,GAAwB,GAAnC,CAAvB;AACA,UAAMI,aAAa,GAAGF,IAAI,CAACC,KAAL,CAAYJ,UAAU,GAAGC,KAAd,GAAuB,GAAlC,CAAtB;AAEA,WAAO;AAAEC,MAAAA,cAAF;AAAkBG,MAAAA;AAAlB,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,kCACmC,KAAKR,wBAAL,CACxC,KAAKS,KAAL,CAAWC,OAD6B,EAExC,KAAKD,KAAL,CAAWE,MAF6B,CADnC;AAAA,UACCP,cADD,yBACCA,cADD;AAAA,UACiBG,aADjB,yBACiBA,aADjB;;AAMP,QAAIK,UAAU,GAAG,EAAjB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,cAApB,EAAoCS,CAAC,EAArC,EAAyC;AACvCD,MAAAA,UAAU,CAACE,IAAX,CAAgB;AAAK,QAAA,GAAG,EAAED,CAAV;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AACD;;AAED,QAAIE,SAAS,GAAG,EAAhB;;AAEA,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,aAApB,EAAmCM,CAAC,EAApC,EAAwC;AACtCE,MAAAA,SAAS,CAACD,IAAV,CAAe;AAAK,QAAA,GAAG,EAAED,CAAV;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACD;;AAED,WACE,0CACE;AAAK,MAAA,KAAK,EAAE;AAAEG,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,eAAe,EAAE;AAApC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,SAAS,CAACG,GAAV,CAAcC,GAAG,IAAIA,GAArB,CADH,EAEGP,UAAU,CAACM,GAAX,CAAeC,GAAG,IAAIA,GAAtB,CAFH,CADF,CADF;AAQD;;AAnC8B;;AAsCjC,eAAepB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./TugOfWar.scss\";\n\nclass TugOfWar extends Component {\n  calculateBoxesFromCounts(zombieCount, humanCount) {\n    const total = zombieCount + humanCount;\n    const percentZombies = Math.round((zombieCount / total) * 100);\n    const percentHumans = Math.round((humanCount / total) * 100);\n\n    return { percentZombies, percentHumans };\n  }\n\n  render() {\n    const { percentZombies, percentHumans } = this.calculateBoxesFromCounts(\n      this.props.zombies,\n      this.props.humans\n    );\n\n    let zombieDivs = [];\n\n    for (let i = 0; i < percentZombies; i++) {\n      zombieDivs.push(<div key={i} className=\"pink-pixel\" />);\n    }\n\n    let humanDivs = [];\n\n    for (let i = 0; i < percentHumans; i++) {\n      humanDivs.push(<div key={i} className=\"yellow-pixel\" />);\n    }\n\n    return (\n      <>\n        <div style={{ display: \"flex\", justifyContents: \"center\" }}>\n          {humanDivs.map(div => div)}\n          {zombieDivs.map(div => div)}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default TugOfWar;\n"]},"metadata":{},"sourceType":"module"}