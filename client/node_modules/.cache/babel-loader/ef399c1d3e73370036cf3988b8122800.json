{"ast":null,"code":"var _jsxFileName = \"/Users/richie/Developer/zombie/src/App.js\";\nimport React, { Component } from \"react\"; //import Web3Connect from \"web3connect\";\n\nimport web3Helper from \"./web3/web3-helper.js\";\nimport TeamScore from \"./components/TeamScore.js\";\nimport TugOfWar from \"./components/TugOfWar.js\";\nimport MessageBoard from \"./components/MessageBoard.js\";\nimport Readme from \"./components/Readme.js\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      team: \"zombie\",\n      humanCount: 0,\n      zombieCount: 0\n    };\n  }\n\n  componentDidMount() {\n    // get data and set state\n    this.updateCounts();\n  }\n\n  async updateCounts() {\n    let humanCount = await web3Helper.humanCount();\n    let zombieCount = await web3Helper.zombieCount();\n    this.setState({\n      humanCount: humanCount,\n      zombieCount: zombieCount\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flexGrow: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: this.state.team === \"human\" ? \"humanColor\" : \"zombieColor\",\n      style: {\n        fontWeight: 400,\n        marginTop: \"66px\",\n        marginBottom: \"56px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"You are a \", this.state.team), React.createElement(\"div\", {\n      className: \"scoreboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scoreboard-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(TeamScore, {\n      name: \"humans\",\n      count: this.state.humanCount,\n      total: parseInt(this.state.zombieCount, 10) + parseInt(this.state.humanCount, 10),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(TeamScore, {\n      name: \"zombies\",\n      count: this.state.zombieCount,\n      total: parseInt(this.state.zombieCount, 10) + parseInt(this.state.humanCount, 10),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))), React.createElement(TugOfWar, {\n      zombies: this.state.zombieCount,\n      humans: this.state.humanCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Readme, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        height: \"100%\",\n        maxWidth: \"360px\",\n        paddingLeft: \"32px\",\n        paddingRight: \"32px\",\n        borderLeft: \"solid 1px rgba(255,255,255,0.2)\",\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(MessageBoard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/richie/Developer/zombie/src/App.js"],"names":["React","Component","web3Helper","TeamScore","TugOfWar","MessageBoard","Readme","App","state","team","humanCount","zombieCount","componentDidMount","updateCounts","setState","render","display","height","flexGrow","fontWeight","marginTop","marginBottom","textAlign","parseInt","maxWidth","paddingLeft","paddingRight","borderLeft","overflowY"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import Web3Connect from \"web3connect\";\nimport web3Helper from \"./web3/web3-helper.js\";\nimport TeamScore from \"./components/TeamScore.js\";\nimport TugOfWar from \"./components/TugOfWar.js\";\nimport MessageBoard from \"./components/MessageBoard.js\";\nimport Readme from \"./components/Readme.js\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  state = {\n    team: \"zombie\",\n    humanCount: 0,\n    zombieCount: 0\n  };\n\n  componentDidMount() {\n    // get data and set state\n    this.updateCounts();\n  }\n\n  async updateCounts() {\n    let humanCount = await web3Helper.humanCount();\n    let zombieCount = await web3Helper.zombieCount();\n    this.setState({ humanCount: humanCount, zombieCount: zombieCount });\n  }\n\n  render() {\n    return (\n      <div style={{ display: \"flex\", height: \"100%\" }}>\n        <div style={{ flexGrow: 1 }}>\n          <h2\n            className={\n              this.state.team === \"human\" ? \"humanColor\" : \"zombieColor\"\n            }\n            style={{\n              fontWeight: 400,\n              marginTop: \"66px\",\n              marginBottom: \"56px\",\n              textAlign: \"center\"\n            }}\n          >\n            You are a {this.state.team}\n          </h2>\n          <div className=\"scoreboard\">\n            <div className=\"scoreboard-inner\">\n              <div>\n                <TeamScore\n                  name=\"humans\"\n                  count={this.state.humanCount}\n                  total={\n                    parseInt(this.state.zombieCount, 10) +\n                    parseInt(this.state.humanCount, 10)\n                  }\n                />\n              </div>\n              <div>\n                <TeamScore\n                  name=\"zombies\"\n                  count={this.state.zombieCount}\n                  total={\n                    parseInt(this.state.zombieCount, 10) +\n                    parseInt(this.state.humanCount, 10)\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <TugOfWar\n            zombies={this.state.zombieCount}\n            humans={this.state.humanCount}\n          />\n          <Readme />\n        </div>\n        <div\n          style={{\n            height: \"100%\",\n            maxWidth: \"360px\",\n            paddingLeft: \"32px\",\n            paddingRight: \"32px\",\n            borderLeft: \"solid 1px rgba(255,255,255,0.2)\",\n            overflowY: \"scroll\"\n          }}\n        >\n          <MessageBoard />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}