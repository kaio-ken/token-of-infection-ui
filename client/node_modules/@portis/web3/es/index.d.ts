import { AsyncMethodReturns } from 'penpal';
import { ISDKConfig, IConnectionMethods, INetwork, IOptions } from './interfaces';
export default class Portis {
    config: ISDKConfig;
    widget: Promise<{
        communication: AsyncMethodReturns<IConnectionMethods>;
        iframe: HTMLIFrameElement;
        widgetFrame: HTMLDivElement;
    }>;
    provider: any;
    private _selectedAddress;
    private _network;
    private _widgetUrl;
    private _onLoginCallback;
    private _onLogoutCallback;
    constructor(dappId: string, network: string | INetwork, options?: IOptions);
    changeNetwork(network: string | INetwork, gasRelay?: boolean): void;
    setDefaultEmail(email: string): void;
    showPortis(): Promise<void>;
    logout(): Promise<{
        error: string;
        result: boolean;
    }>;
    onLogin(callback: (walletAddress: string, email?: string, reputation?: string) => void): void;
    onLogout(callback: () => void): void;
    getExtendedPublicKey(path?: string): Promise<{
        error: string;
        result: string;
    }>;
    importWallet(mnemonicOrPrivateKey: string): Promise<void>;
    private _valiadateParams;
    private _initWidget;
    private _initProvider;
    private _setHeight;
    private _getWindowSize;
    private _onLogin;
    private _onLogout;
    private clearSubprovider;
}
